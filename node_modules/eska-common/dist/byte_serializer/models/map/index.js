"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const modelType_1 = require("./../modelType");
const types_1 = require("./../../types");
const mapObject_1 = require("./mapObject");
const simpleArray_1 = require("./simpleArray");
class BufferMap extends modelType_1.ModelType {
    constructor(key, val) {
        super();
        this.typeId = types_1.BufferTypesId.BufferMap;
        this.key = key;
        this.val = val;
        this.typeElement = new simpleArray_1.SimpleArray(new mapObject_1.MapObject(key, val));
    }
    getLength(data) {
        const arr = [...data].map(([key, val]) => ({ key, val }));
        const size = this.length.type + this.length.type + this.length.type + this.typeElement.getLength(arr);
        return size;
    }
    read(buffer, offset) {
        offset += this.length.type;
        const keyPrimitiveTypeId = buffer.readUInt8(offset);
        offset += this.length.type;
        const KeyPrimitive = types_1.mapPrimitiveCode.get(keyPrimitiveTypeId);
        const valuePrimitiveTypeId = buffer.readUInt8(offset);
        offset += this.length.type;
        const ValuePrimitive = types_1.mapPrimitiveCode.get(valuePrimitiveTypeId);
        this.typeElement = new simpleArray_1.SimpleArray(new mapObject_1.MapObject(new KeyPrimitive(), new ValuePrimitive()));
        const result = this.typeElement.read(buffer, offset);
        const array = result.value.map(({ key, val }) => ([key, val]));
        return {
            value: new Map(array),
            offset: result.offset
        };
    }
    writeTypes(buffer, offset) {
        offset = buffer.writeUInt8(this.key.typeId, offset);
        return buffer.writeUInt8(this.val.typeId, offset);
    }
    write(buffer, data, offset) {
        offset = this.writeTypeId(buffer, offset);
        offset = this.writeTypes(buffer, offset);
        const arr = [...data].map(([key, val]) => new mapObject_1.LocalSchema(key, val));
        return this.typeElement.write(buffer, arr, offset);
    }
}
exports.BufferMap = BufferMap;
//# sourceMappingURL=index.js.map