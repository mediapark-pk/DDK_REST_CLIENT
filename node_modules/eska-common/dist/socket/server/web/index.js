"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const types_1 = require("../../server/types");
const ws_1 = __importDefault(require("ws"));
const middleware_1 = require("../../middleware/middleware");
const api_1 = require("../../decorator/api");
const config_1 = require("../../config/config");
const message_1 = require("../../model/message");
const heartbeat_1 = require("../../model/heartbeat");
class WebSocketServer extends types_1.SocketServer {
    constructor(port, config = {}, heartbeatRate, middleware = new middleware_1.DefaultSocketMiddleware(api_1.API_CONTAINER, true, types_1.SocketType.WEB)) {
        super(port, config, heartbeatRate, middleware);
    }
    // TODO: split heartbeat. create separated channel for that
    enableHeartbeat(heartbeatRate) {
        this.heartbeatJob = setInterval(() => {
            const heartbeatData = new heartbeat_1.Heartbeat();
            const heartbeatMessage = new message_1.Message(message_1.MessageType.EVENT, config_1.SYSTEM_HEALTH_SOCKET_CHANNEL, heartbeatData);
            this.socket.clients.forEach(client => client.send(JSON.stringify(heartbeatMessage)));
        }, heartbeatRate);
    }
    run() {
        this.socket = new ws_1.default.Server({ port: this.port, ...this.config });
        super.run();
    }
    shutdown() {
        super.shutdown();
    }
}
exports.WebSocketServer = WebSocketServer;
//# sourceMappingURL=index.js.map